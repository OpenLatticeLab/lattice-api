name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml

      - name: Upgrade pip & build tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install project (dev extras)
        run: |
          pip install -e '.[dev]'

      - name: Run tests
        run: |
          pytest -q

      - name: Run tests with coverage
        run: |
          pytest --cov --cov-report=xml -q
      
      - name: Write coverage summary
        if: always()
        shell: bash
        run: |
          if [[ -f coverage.xml ]]; then
            python - <<'PY'
import os, xml.etree.ElementTree as ET
p = 'coverage.xml'
root = ET.parse(p).getroot()

line_rate = root.attrib.get('line-rate')
pct = f"{float(line_rate)*100:.2f}%" if line_rate else "N/A"

lines_valid = root.attrib.get('lines-valid')
lines_covered = root.attrib.get('lines-covered')

summary = ["# Coverage Summary\n"]
summary.append(f"**Total**: {pct}")
if lines_valid and lines_covered:
    summary.append(f"**Lines**: {lines_covered}/{lines_valid}")
summary.append("")

out = "\n".join(summary)
open(os.environ['GITHUB_STEP_SUMMARY'], "a", encoding="utf-8").write(out)
PY
          else
            echo "### Coverage Summary" >> "$GITHUB_STEP_SUMMARY"
            echo "coverage.xml not found (tests may have failed before coverage was generated)." >> "$GITHUB_STEP_SUMMARY"
          fi